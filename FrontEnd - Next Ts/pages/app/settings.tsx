import styles from '../styles/pages/Settings.module.css';
import Head from 'next/head';
//import Scrole from '../components/app/Settings/Scrole';
import classNames from 'classnames';
//import ContainerStatistic from '../components/app/Settings/ContainerStatistic';
//import ContainerHistoryMatchs from '../components/app/Settings/ContainerHistoryMatchs';
//import ContainerPrivateData from '../components/app/Settings/ContainerPrivateData';
//import ContainerMoney from '../components/app/Settings/ContainerMoney';
//import ContainerSettings from '../components/app/Settings/ContainerSettings';
//import ContainerBlackList from '../components/app/Settings/ContainerBlackList';
//import Cookies from 'js-cookie';
import { useDispatch } from "react-redux";
//import { setUserData } from '../redux/action/actionCreate';
import { useEffect, useState } from "react";
import Navbar from '@/AppComponents/UI/Navigations/NavbarApp';
//import store from '../../redux/store';

const JsonWebToken = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYzZDJjOTgzMjhjODNiNmRmN2RhY2Q3YiIsInV1aWQiOjE2NzQ3NTg1MzE3OTQsInVzZXJuYW1lIjoiRzEyMzQ1NiIsImlhdCI6MTY3NDgzMTk3MiwiZXhwIjoxNjc2NTE2NzcyfQ.4-VI--eYzt4N45POyl1RN57Tw6jXfh0rGEfUkU3TAFk'

const settings = () => {
  const dispatch = useDispatch();
  const [isLoading, setIsLoading] = useState(true);
  const getData = async () => {
      if(JsonWebToken) {
          const response = await fetch("http://localhost:4000/auth/jwtcheck", {
              headers: {
                  'Authorization': `Bearer ${JsonWebToken}`  
              } 
          })
          const data = await response.json()
          return data
      }
  }
  
  useEffect(() => {
      (async () => {
        const data = await getData()
        console.log(data)
        setIsLoading(false)
        //dispatch(setUserData({
            //type: setUserData,
            //token: JsonWebToken,
            //rank: data.rank,
            //uuid: data.uuid,
            //mail: data.mail,
            //username: data.username,
            //avatar: data.avatar,
            //bio: data.bio,
            //country: data.country,
            //datareg: data.datareg,
            //ip: data.ipp,
            //UserData: data.UserData
          //}))  
      })()
    }, [])

    return (
      <div className={styles.wrapper}>        
        <Navbar />
        <Head>
          <title>BattleStar settings</title>
          <meta name="description" content="Generated by create next app" />
          <meta name="viewport" content="width=device-width, initial-scale=1" />
          <link rel="icon" href="/favicon.png" />
        </Head>
        <div className={styles.contentMain}>
          <div className={styles.topMask}></div>   
          <div className={styles.ContainerMain}>
            {/**<Scrole />**/}
            <div className={styles.ContainerMaster}>
              <div id='MenuStatistics' className={styles.Menu}>
                {/**<ContainerStatistic user={store.getState().userdata.UserData.GameData} />**/}
              </div>
              <div id='MenuHistoryMatchs' className={classNames(styles.NoActive, styles.Menu)}>
                {/**<ContainerHistoryMatchs />**/}
              </div>
              <div id='MenuPrivateData' className={classNames(styles.NoActive, styles.Menu)}>
                {/**<ContainerPrivateData />**/}
              </div>
              <div id='MenuMoney' className={classNames(styles.NoActive, styles.Menu)}>
                {/**<ContainerMoney user={store.getState().userdata.UserData.CardInfo} />**/}
              </div>
              <div id='MenuSettings' className={classNames(styles.NoActive, styles.Menu)}>
                {/*<ContainerSettings />*/}
              </div>
              <div id='MenuBlackList' className={classNames(styles.NoActive, styles.Menu)}>
                {/*<ContainerBlackList />*/}
              </div>
            </div>
          </div>
        </div>
      </div>
    );
};

export default settings;